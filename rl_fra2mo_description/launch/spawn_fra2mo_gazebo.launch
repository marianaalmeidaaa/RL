<?xml version="1.0" ?>
<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  
  <!--desired positions for 1a) -->
  <arg name="x" default="-3.0"/>
  <arg name="y" default="5.0"/>
  <arg name="z" default="0.1"/>
 
  <arg name="yaw" default="-1.57"/>
  <env name="GAZEBO_MODEL_PATH" value="$(find rl_racefield)/models:$(optenv GAZEBO_MODEL_PATH)"/>

  <!-- We resume the logic in empty_world.launch -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>


<!-- urdf xml robot description loaded on the Parameter Server-->  

  <param name="robot_description" command="$(find xacro)/xacro '$(find rl_fra2mo_description)/urdf/fra2mo.xacro'" /> 

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
	args="-urdf -model fra2mo -x $(arg x) -y $(arg y) -z $(arg z) -Y $(arg yaw) -param robot_description"/> 

<!--Static tf publishers-->
<node pkg="tf" type="static_transform_publisher" name="goal1_pub" args="-10 3 0 0 0 0 1 map goal1 100" />
<node pkg="tf" type="static_transform_publisher" name="goal2_pub" args="-15 7 0 0 0 0.259 0.966 map goal2 100" />
<node pkg="tf" type="static_transform_publisher" name="goal3_pub" args="-6 8 0 0 0 1 0 map goal3 100" />
<node pkg="tf" type="static_transform_publisher" name="goal4_pub" args="-17.5 3 0 0 0 0.609 0.793 map goal4 100" />

<!-- GUI Controls -->
<node pkg="rqt_robot_steering" type="rqt_robot_steering"  name="Pilot" />  <!-- Uncomment if you want to use robot_steering -->

<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
<!-- <node name="joint_state_publisher_gui" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" />   -->
<!-- RVIZ  -->
<!-- <node name="rviz" pkg="rviz" type="rviz" args="-d $(find rl_fra2mo_description)/conf/fra2mo_conf.rviz" required="true" /> -->

</launch>
